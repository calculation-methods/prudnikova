# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CMake on a single platform

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install boost
<<<<<<< HEAD
      id: boost
      uses: egor-tensin/build-boost@v1
      with:
        version: 1.71.0
        libraries: filesystem program_options system
        platform: x64
=======
      uses: MarkusJx/install-boost@v2.4.5
      id: boost
      with:
        boost_version: 1.73.0
>>>>>>> c05d865... fix cmake building with boost

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
<<<<<<< HEAD
      run: cmake -B ${{github.workspace}}/build src
=======
      run: cmake src -B ${{github.workspace}}/build -DBoost_INCLUDE_DIR=${{steps.boost.outputs.BOOST_ROOT}}/include -DBoost_LIBRARY_DIRS=${{steps.boost.outputs.BOOST_ROOT}}/lib
      env:
        BOOST_ROOT: ${{steps.boost.outputs.BOOST_ROOT}}
>>>>>>> c05d865... fix cmake building with boost

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest

